#!/usr/bin/env python

# Copyright (c) 2016, Simon Brodeur
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright 
#    notice, this list of conditions and the following disclaimer.
#   
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
# OF SUCH DAMAGE.

from cStringIO import StringIO

# From: http://permalink.gmane.org/gmane.linux.drivers.uvc.devel/2283
huffman_table = \
    '\xFF\xC4\x01\xA2\x00\x00\x01\x05\x01\x01\x01\x01'\
    '\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02'\
    '\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x01\x00\x03'\
    '\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00'\
    '\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09'\
    '\x0A\x0B\x10\x00\x02\x01\x03\x03\x02\x04\x03\x05'\
    '\x05\x04\x04\x00\x00\x01\x7D\x01\x02\x03\x00\x04'\
    '\x11\x05\x12\x21\x31\x41\x06\x13\x51\x61\x07\x22'\
    '\x71\x14\x32\x81\x91\xA1\x08\x23\x42\xB1\xC1\x15'\
    '\x52\xD1\xF0\x24\x33\x62\x72\x82\x09\x0A\x16\x17'\
    '\x18\x19\x1A\x25\x26\x27\x28\x29\x2A\x34\x35\x36'\
    '\x37\x38\x39\x3A\x43\x44\x45\x46\x47\x48\x49\x4A'\
    '\x53\x54\x55\x56\x57\x58\x59\x5A\x63\x64\x65\x66'\
    '\x67\x68\x69\x6A\x73\x74\x75\x76\x77\x78\x79\x7A'\
    '\x83\x84\x85\x86\x87\x88\x89\x8A\x92\x93\x94\x95'\
    '\x96\x97\x98\x99\x9A\xA2\xA3\xA4\xA5\xA6\xA7\xA8'\
    '\xA9\xAA\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xC2'\
    '\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xD2\xD3\xD4\xD5'\
    '\xD6\xD7\xD8\xD9\xDA\xE1\xE2\xE3\xE4\xE5\xE6\xE7'\
    '\xE8\xE9\xEA\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9'\
    '\xFA\x11\x00\x02\x01\x02\x04\x04\x03\x04\x07\x05'\
    '\x04\x04\x00\x01\x02\x77\x00\x01\x02\x03\x11\x04'\
    '\x05\x21\x31\x06\x12\x41\x51\x07\x61\x71\x13\x22'\
    '\x32\x81\x08\x14\x42\x91\xA1\xB1\xC1\x09\x23\x33'\
    '\x52\xF0\x15\x62\x72\xD1\x0A\x16\x24\x34\xE1\x25'\
    '\xF1\x17\x18\x19\x1A\x26\x27\x28\x29\x2A\x35\x36'\
    '\x37\x38\x39\x3A\x43\x44\x45\x46\x47\x48\x49\x4A'\
    '\x53\x54\x55\x56\x57\x58\x59\x5A\x63\x64\x65\x66'\
    '\x67\x68\x69\x6A\x73\x74\x75\x76\x77\x78\x79\x7A'\
    '\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x92\x93\x94'\
    '\x95\x96\x97\x98\x99\x9A\xA2\xA3\xA4\xA5\xA6\xA7'\
    '\xA8\xA9\xAA\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA'\
    '\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xD2\xD3\xD4'\
    '\xD5\xD6\xD7\xD8\xD9\xDA\xE2\xE3\xE4\xE5\xE6\xE7'\
    '\xE8\xE9\xEA\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA'

def mjpeg2jpeg(data):
    
    instream = StringIO(data)
    outstream = StringIO()
    
    # Read Start Of Image bytes
    hdr = instream.read(2)
    if hdr != '\xff\xd8':
        raise Exception('Invalid MJPEG data')
    outstream.write(hdr)

    # Add Define Huffman Table bytes
    outstream.write(huffman_table)

    # Process the remaining bytes
    outstream.write(instream.read())
    
    return outstream.getvalue()
